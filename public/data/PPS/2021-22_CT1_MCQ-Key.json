{
  "paper_title": "PPS CT1 MCQ Answer Key",
  "source": "2021-22_CT1_MCQ-Key.pdf",
  "questions": [
    {
      "question_number": "1",
      "question_text": "Who is the father of C language?\na) Steve Jobs\nb) James Gosling\nc) Dennis Ritchie\nd) Rasmus Lerdorf",
      "marks": 1,
      "answer": "Answer: C",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "2",
      "question_text": "Where can we include comments in a C program?\nA) Before header file\nB) Before main function\nC) Anywhere in the C code\nD) During variable declaration",
      "marks": 1,
      "answer": "Answer: C",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "3",
      "question_text": "C programming is a ______ level language.\nA) Low\nB) High\nC) Assembly\nD) Machine",
      "marks": 1,
      "answer": "Answer: B",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "4",
      "question_text": "Preprocessor directives begin with _______\nA) *\nB) %\nC) #\nD) /",
      "marks": 1,
      "answer": "Answer: C",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "5",
      "question_text": "Execution ends with a _______\nA) }\nB) getch()\nC) putch()\nD) ;",
      "marks": 1,
      "answer": "Answer: A",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "6",
      "question_text": "Which of the following is not a valid C variable name?\na) int number;\nb) float rate;\nc) int variable_count;\nd) int $main;",
      "marks": 1,
      "answer": "Answer: D",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "7",
      "question_text": "What is the sizeof(char) in a 32-bit C compiler?\na) 1 bit\nb) 2 bits\nc) 1 Byte\nd) 2 Bytes",
      "marks": 1,
      "answer": "Answer: C",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "8",
      "question_text": "Which one is true/false\nStatement 1: C Supports for Graphics\nStatement 2: C Supports large number of Operators\nA) Both are false\nB) Both are true\nC) Statement 1 is true, statement 2 is false\nD) Statement 2 is true, statement 1 is false",
      "marks": 1,
      "answer": "Answer: B",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "9",
      "question_text": "Which one of the following is not a keyword in C programming?\nA. auto\nB. extern\nC. global\nD. register",
      "marks": 1,
      "answer": "Answer: C",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "10",
      "question_text": "Which of the following will not valid expressions in C?\na) a=2+(b=5);\nb) a=11%3;\nc) a=b=c=5;\nd) b+5=2;",
      "marks": 1,
      "answer": "Answer: D",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "11",
      "question_text": "Identify the operator that returns amount of memory assigned for a variable\nA) sizeof()\nB) conditional operator\nC) relational operator\nD) logical operator",
      "marks": 1,
      "answer": "Answer: sizeof()",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "12",
      "question_text": "Which symbol is been used for processing in flowchart?\na) Parallelogram (Input/Output)\nb) Rectangle (Process)\nc) Diamond (Decision)\nd) Oval (Start/End)",
      "marks": 1,
      "answer": "Answer: B",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "13",
      "question_text": "Value of A, B and C in the following code snippet is\nint A=10, B, C;\nB = --A;\nC = A--;\na. 9, 10, 10\nb. 10, 9, 8\nc. 9, 9, 8\nd. 8, 9, 9",
      "marks": 1,
      "answer": "Answer: D",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "14",
      "question_text": "Predict the output of the following code:\n#include <stdio.h>\nint main(void) {\nint if=10;\nprintf(\"%d\",if*if);\nreturn 0;\n}\nA) 10\nB) Compiler error\nC) 100\nD) 0",
      "marks": 1,
      "answer": "Answer: B",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "15",
      "question_text": "Predict the value of the variable “count” at the end of program execution.\n#include <stdio.h>\nvoid main()\n{\nint count=100;\n{\nint count=10;\nprintf(\"%d\\t\",count);\n}\nprintf(\"%d\",count);\n}\nA) 10\t100\nB) 100\t10\nC) 10\t10\nD) 100\t100",
      "marks": 1,
      "answer": "Answer: A",
      "answer_source": "provided",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "16",
      "question_text": "Write the algorithm and C code to find the sum and average of five marks.",
      "marks": 5,
      "answer": "**Algorithm:**\n1. Start\n2. Declare five integer variables for marks (m1, m2, m3, m4, m5), an integer for sum, and a float for average.\n3. Prompt the user to enter five marks.\n4. Read the five marks and store them in the respective variables.\n5. Calculate the sum: sum = m1 + m2 + m3 + m4 + m5.\n6. Calculate the average: average = sum / 5.0. (Use 5.0 to ensure floating-point division).\n7. Print the calculated sum.\n8. Print the calculated average.\n9. Stop.\n\n**C Code:**\n```c\n#include <stdio.h>\n\nint main() {\n    int m1, m2, m3, m4, m5, sum;\n    float average;\n\n    // Prompt user for input\n    printf(\"Enter marks for five subjects: \");\n\n    // Read the five marks\n    scanf(\"%d %d %d %d %d\", &m1, &m2, &m3, &m4, &m5);\n\n    // Calculate the sum\n    sum = m1 + m2 + m3 + m4 + m5;\n\n    // Calculate the average\n    average = (float)sum / 5;\n\n    // Display the results\n    printf(\"Sum of the marks is: %d\\n\", sum);\n    printf(\"Average of the marks is: %.2f\\n\", average);\n\n    return 0;\n}\n```",
      "answer_source": "generated",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    },
    {
      "question_number": "17",
      "question_text": "Rajesh is playing with a rectangular box (cuboid). He knows the length, width and height of the box. Help him to find the surface area of the box using a C program.\nHint: Surface area of a cuboid is 2lw + 2lh + 2wh",
      "marks": 5,
      "answer": "**Algorithm:**\n1. Start\n2. Declare three float variables for length (l), width (w), height (h) and one for surface area (sa).\n3. Prompt the user to enter the length, width, and height of the cuboid.\n4. Read the three values.\n5. Calculate the surface area using the formula: sa = 2 * (l*w + l*h + w*h).\n6. Print the calculated surface area.\n7. Stop.\n\n**C Code:**\n```c\n#include <stdio.h>\n\nint main() {\n    float length, width, height, surface_area;\n\n    // Prompt user for input\n    printf(\"Enter the length of the cuboid: \");\n    scanf(\"%f\", &length);\n\n    printf(\"Enter the width of the cuboid: \");\n    scanf(\"%f\", &width);\n\n    printf(\"Enter the height of the cuboid: \");\n    scanf(\"%f\", &height);\n\n    // Calculate the surface area\n    surface_area = 2 * (length * width + length * height + width * height);\n\n    // Display the result\n    printf(\"The surface area of the cuboid is: %.2f\\n\", surface_area);\n\n    return 0;\n}\n```",
      "answer_source": "generated",
      "chapter": "Unit 1: Evolution of Programming & Languages - Problem solving through programming - Writing algorithms & Pseudo code - Single line and multiline comments - Introduction to C: Structure of the C program - Input and output statements. Variables and identifiers, Constants, Keywords - Values, Names, Scope, Binding, Storage Classes - Numeric Data types: integer, floating point Non-Numeric Data types: char and string - L value and R value in expression, Increment and decrement operator - Comma, Arrow and Assignment operator, Bitwise and Size-of operator - Arithmetic, Relational and logical Operators - Condition Operators, Operator Precedence - Expressions with pre / post increment operator."
    }
  ]
}